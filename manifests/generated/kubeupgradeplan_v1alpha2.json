{
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "allowDowngrade": {
          "description": "Allow downgrading to older kubernetes versions.\nOnly enable if you know what you are doing.",
          "type": "boolean"
        },
        "groups": {
          "additionalProperties": {
            "properties": {
              "dependsOn": {
                "description": "Specify group(s) that should be upgraded first.\nShould be used to ensure control-plane nodes are upgraded first.",
                "example": "control-plane",
                "items": {
                  "type": "string"
                },
                "type": "array",
                "x-kubernetes-list-type": "atomic"
              },
              "labels": {
                "description": "The label selector by which to filter for this group",
                "example": "node-role.kubernetes.io/control-plane;node-role.kubernetes.io/compute",
                "properties": {
                  "matchExpressions": {
                    "description": "matchExpressions is a list of label selector requirements. The requirements are ANDed.",
                    "items": {
                      "description": "A label selector requirement is a selector that contains values, a key, and an operator that\nrelates the key and values.",
                      "properties": {
                        "key": {
                          "description": "key is the label key that the selector applies to.",
                          "type": "string"
                        },
                        "operator": {
                          "description": "operator represents a key's relationship to a set of values.\nValid operators are In, NotIn, Exists and DoesNotExist.",
                          "type": "string"
                        },
                        "values": {
                          "description": "values is an array of string values. If the operator is In or NotIn,\nthe values array must be non-empty. If the operator is Exists or DoesNotExist,\nthe values array must be empty. This array is replaced during a strategic\nmerge patch.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array",
                          "x-kubernetes-list-type": "atomic"
                        }
                      },
                      "required": [
                        "key",
                        "operator"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array",
                    "x-kubernetes-list-type": "atomic"
                  },
                  "matchLabels": {
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels\nmap is equivalent to an element of matchExpressions, whose key field is \"key\", the\noperator is \"In\", and the values array contains only \"value\". The requirements are ANDed.",
                    "type": "object"
                  }
                },
                "type": "object",
                "x-kubernetes-map-type": "atomic",
                "additionalProperties": false
              },
              "upgraded": {
                "description": "The configuration for all upgraded daemons in the group. Overwrites global parameters.",
                "nullable": true,
                "properties": {
                  "check-interval": {
                    "description": "The interval between regular checks",
                    "example": "3h;24h;30m",
                    "format": "duration",
                    "type": "string"
                  },
                  "fleetlock-group": {
                    "description": "The group to use for fleetlock",
                    "example": "control-plane;compute",
                    "type": "string"
                  },
                  "fleetlock-url": {
                    "description": "URL for the fleetlock server. Is required to be set globally.",
                    "example": "https://fleetlock.example.com",
                    "type": "string"
                  },
                  "retry-interval": {
                    "description": "The interval between retries when an operation fails",
                    "example": "5m;1m;30s",
                    "format": "duration",
                    "type": "string"
                  },
                  "stream": {
                    "description": "The container image repository for os rebases",
                    "example": "ghcr.io/heathcliff26/fcos-k8s",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "labels"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "description": "The different groups in which the nodes will be upgraded.\nAt minimum needs to separate control-plane from compute nodes, to ensure that control-plane nodes will be upgraded first.",
          "minProperties": 1,
          "type": "object"
        },
        "kubernetesVersion": {
          "description": "The kubernetes version the cluster should be at.\nIf the actual version differs, the cluster will be upgraded.",
          "example": "v1.31.0",
          "format": "semver",
          "type": "string"
        },
        "upgraded": {
          "description": "The configuration for all upgraded daemons. Can be overwritten by group specific config.",
          "properties": {
            "check-interval": {
              "description": "The interval between regular checks",
              "example": "3h;24h;30m",
              "format": "duration",
              "type": "string"
            },
            "fleetlock-group": {
              "description": "The group to use for fleetlock",
              "example": "control-plane;compute",
              "type": "string"
            },
            "fleetlock-url": {
              "description": "URL for the fleetlock server. Is required to be set globally.",
              "example": "https://fleetlock.example.com",
              "type": "string"
            },
            "retry-interval": {
              "description": "The interval between retries when an operation fails",
              "example": "5m;1m;30s",
              "format": "duration",
              "type": "string"
            },
            "stream": {
              "description": "The container image repository for os rebases",
              "example": "ghcr.io/heathcliff26/fcos-k8s",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "groups",
        "kubernetesVersion"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "groups": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "The current status of each group",
          "type": "object"
        },
        "summary": {
          "description": "A summary of the overall status of the cluster",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "required": [
    "spec"
  ],
  "type": "object"
}
