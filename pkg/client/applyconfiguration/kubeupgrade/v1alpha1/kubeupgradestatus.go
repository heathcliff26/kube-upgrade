// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha1

// KubeUpgradeStatusApplyConfiguration represents a declarative configuration of the KubeUpgradeStatus type for use
// with apply.
type KubeUpgradeStatusApplyConfiguration struct {
	Summary *string           `json:"summary,omitempty"`
	Groups  map[string]string `json:"groups,omitempty"`
}

// KubeUpgradeStatusApplyConfiguration constructs a declarative configuration of the KubeUpgradeStatus type for use with
// apply.
func KubeUpgradeStatus() *KubeUpgradeStatusApplyConfiguration {
	return &KubeUpgradeStatusApplyConfiguration{}
}

// WithSummary sets the Summary field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Summary field is set to the value of the last call.
func (b *KubeUpgradeStatusApplyConfiguration) WithSummary(value string) *KubeUpgradeStatusApplyConfiguration {
	b.Summary = &value
	return b
}

// WithGroups puts the entries into the Groups field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, the entries provided by each call will be put on the Groups field,
// overwriting an existing map entries in Groups field with the same key.
func (b *KubeUpgradeStatusApplyConfiguration) WithGroups(entries map[string]string) *KubeUpgradeStatusApplyConfiguration {
	if b.Groups == nil && len(entries) > 0 {
		b.Groups = make(map[string]string, len(entries))
	}
	for k, v := range entries {
		b.Groups[k] = v
	}
	return b
}
