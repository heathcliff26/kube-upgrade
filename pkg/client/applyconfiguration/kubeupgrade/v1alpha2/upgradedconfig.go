// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1alpha2

// UpgradedConfigApplyConfiguration represents a declarative configuration of the UpgradedConfig type for use
// with apply.
type UpgradedConfigApplyConfiguration struct {
	Stream         *string `json:"stream,omitempty"`
	FleetlockURL   *string `json:"fleetlock-url,omitempty"`
	FleetlockGroup *string `json:"fleetlock-group,omitempty"`
	CheckInterval  *string `json:"check-interval,omitempty"`
	RetryInterval  *string `json:"retry-interval,omitempty"`
}

// UpgradedConfigApplyConfiguration constructs a declarative configuration of the UpgradedConfig type for use with
// apply.
func UpgradedConfig() *UpgradedConfigApplyConfiguration {
	return &UpgradedConfigApplyConfiguration{}
}

// WithStream sets the Stream field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Stream field is set to the value of the last call.
func (b *UpgradedConfigApplyConfiguration) WithStream(value string) *UpgradedConfigApplyConfiguration {
	b.Stream = &value
	return b
}

// WithFleetlockURL sets the FleetlockURL field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FleetlockURL field is set to the value of the last call.
func (b *UpgradedConfigApplyConfiguration) WithFleetlockURL(value string) *UpgradedConfigApplyConfiguration {
	b.FleetlockURL = &value
	return b
}

// WithFleetlockGroup sets the FleetlockGroup field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the FleetlockGroup field is set to the value of the last call.
func (b *UpgradedConfigApplyConfiguration) WithFleetlockGroup(value string) *UpgradedConfigApplyConfiguration {
	b.FleetlockGroup = &value
	return b
}

// WithCheckInterval sets the CheckInterval field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the CheckInterval field is set to the value of the last call.
func (b *UpgradedConfigApplyConfiguration) WithCheckInterval(value string) *UpgradedConfigApplyConfiguration {
	b.CheckInterval = &value
	return b
}

// WithRetryInterval sets the RetryInterval field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the RetryInterval field is set to the value of the last call.
func (b *UpgradedConfigApplyConfiguration) WithRetryInterval(value string) *UpgradedConfigApplyConfiguration {
	b.RetryInterval = &value
	return b
}
